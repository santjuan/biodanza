package biodanza.vista;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Vector;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import biodanza.modelo.Album;
import biodanza.modelo.Biodanza;
import biodanza.modelo.Cancion;
import biodanza.modelo.Coleccion;
import biodanza.modelo.MusicPlayer;

public class AgregarCancionG extends javax.swing.JDialog implements DialogCaller
{

    private static final long serialVersionUID = -2713896096124392520L;

    private DialogCaller padre;
    private volatile MusicPlayer playing = null;

    /** Creates new form AgregarCancion */
    public AgregarCancionG(java.awt.Frame parent, boolean modal, DialogCaller p, Cancion c, String etiqueta)
    {
        super(parent, modal);
        initComponents();
        jComboBox1.setPrototypeDisplayValue("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        jComboBox2.setPrototypeDisplayValue("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        jComboBox3.setPrototypeDisplayValue("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        jComboBox4.setPrototypeDisplayValue("");
        String[] et = Biodanza.darEtiquetas().clone();
        if(etiqueta != null && !etiqueta.isEmpty())
            for(int i = 0; i < et.length; i++)
                if(et[i].equals(etiqueta))
                {
                    et[i] = et[0];
                    et[0] = etiqueta;
                }
        String[] nuevo = new String[et.length + 1];
        nuevo[0] = "";
        System.arraycopy(et, 0, nuevo, 1, et.length);
        jComboBox4.setModel(new DefaultComboBoxModel(nuevo));
        if(etiqueta != null && !etiqueta.isEmpty())
            jComboBox4.setSelectedItem(etiqueta);
        else
            jComboBox4.setSelectedItem(nuevo[0]);
        jComboBox4.updateUI();
        padre = p;
        if(c != null)
        {
            jComboBox4.setSelectedItem(nuevo[0]);
            jComboBox2.setModel(new DefaultComboBoxModel(
                filtrarEtiquetaAlbum(((Coleccion) jComboBox1.getSelectedItem()).albums)));
            jComboBox3.setModel(new DefaultComboBoxModel(
                filtrarEtiquetaCancion(((Album) jComboBox2.getSelectedItem()).canciones)));
            jComboBox1.setSelectedItem(biodanza.modelo.Biodanza.darColeccionCancion(c));
            jComboBox2.setSelectedItem(biodanza.modelo.Biodanza.darAlbumCancion(c));
            jComboBox3.setSelectedItem(c);
        }
        jComboBox1.updateUI();
        jComboBox2.updateUI();
        jComboBox3.updateUI();
        if(c == null)
            jComboBox4ActionPerformed(null);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e)
            {
                MusicPlayer.stopPlayer();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox(filtrarEtiquetaColeccion(biodanza.modelo.Biodanza.colecciones));
        jComboBox2 = new javax.swing.JComboBox(filtrarEtiquetaAlbum(((Coleccion) jComboBox1.getSelectedItem()).albums));
        jLabel2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox(filtrarEtiquetaCancion(((Album) jComboBox2.getSelectedItem()).canciones));
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox(biodanza.modelo.Biodanza.darEtiquetas());
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(282, 318));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel1.setText("Etiqueta");

        jComboBox1.setModel(jComboBox1.getModel());
        jComboBox1.setMaximumSize(new java.awt.Dimension(42, 28));
        jComboBox1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(jComboBox2.getModel());
        jComboBox2.setMaximumSize(new java.awt.Dimension(42, 28));
        jComboBox2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setText("Album");

        jComboBox3.setModel(jComboBox3.getModel());
        jComboBox3.setMaximumSize(new java.awt.Dimension(42, 28));
        jComboBox3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel3.setText("Cancion");

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton5.setText("Agregar");
        jButton5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("E");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel4.setText("Coleccion");

        jComboBox4.setModel(jComboBox4.getModel());
        jComboBox4.setMaximumSize(new java.awt.Dimension(42, 28));
        jComboBox4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButton4.setText("B");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("T");
        jButton6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout
                .createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                            javax.swing.GroupLayout.Alignment.TRAILING,
                            layout
                                .createSequentialGroup()
                                .addGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton2)
                                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                    layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(
                                            layout
                                                .createSequentialGroup()
                                                .addGap(215, 215, 215)
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel1)
                                        .addGroup(
                                            layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING,
                                                    0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING,
                                                    0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE, 504,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(
                            javax.swing.GroupLayout.Alignment.TRAILING,
                            layout
                                .createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 504,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout
                .createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(
                    layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                            layout
                                .createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(
                                    layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(
                            layout
                                .createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(20, 20, 20)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jComboBox1ActionPerformed
        jComboBox2.setModel(new DefaultComboBoxModel(
            filtrarEtiquetaAlbum(((Coleccion) jComboBox1.getSelectedItem()).albums)));
        jComboBox3.setModel(new DefaultComboBoxModel(
            filtrarEtiquetaCancion(((Album) jComboBox2.getSelectedItem()).canciones)));
        jComboBox1.updateUI();
        jComboBox2.updateUI();
        jComboBox3.updateUI();
        chequearPlaying();
    }// GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jComboBox2ActionPerformed
        jComboBox3.setModel(new DefaultComboBoxModel(
            filtrarEtiquetaCancion(((Album) jComboBox2.getSelectedItem()).canciones)));
        jComboBox3.updateUI();
        chequearPlaying();
    }// GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton3ActionPerformed
        synchronized(this)
        {
            if(playing != null)
                jButton1ActionPerformed(null);
        }
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                BuscarCancionG bc = new BuscarCancionG(new javax.swing.JFrame(), true, AgregarCancionG.this);
                bc.setVisible(true);
            }
        });
    }// GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton5ActionPerformed
        MusicPlayer.stopPlayer();
        padre.setAnswer(DialogCaller.OK, jComboBox3.getSelectedItem());
        setVisible(false);
    }// GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton1ActionPerformed
        synchronized(this)
        {
            if(playing == null)
            {
                playing = MusicPlayer.playSong((Cancion) jComboBox3.getSelectedItem(), new Runnable()
                {
                    public void run()
                    {
                        if(playing != null && playing.termino)
                            jButton1ActionPerformed(null);
                    }
                });
                if(playing != null)
                {
                    playing.play();
                    jButton1.setText("Stop");
                }
            }
            else
            {
                playing.stop();
                playing = null;
                jButton1.setText("Play");
            }
        }
    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton2ActionPerformed
        String etiqueta = BiodanzaG.escogerEtiqueta(this);
        Cancion c = (Cancion) jComboBox3.getSelectedItem();
        if(etiqueta != null && !etiqueta.isEmpty() && c != null)
            c.agregarEtiqueta(etiqueta);
        else
        {
            if(JOptionPane.showConfirmDialog(this, "Desea etiquetar una coleccion?", "Etiquetar coleccion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            {
                Object[] colecciones = Biodanza.colecciones.toArray();
                Arrays.sort(colecciones);
                Coleccion seleccionada = (Coleccion) JOptionPane.showInputDialog(this, "Seleccione la coleccion",
                    "Seleccionar coleccion", JOptionPane.INFORMATION_MESSAGE, null, colecciones, colecciones[0]);
                if(seleccionada == null)
                    return;
                Object[] albums = seleccionada.albums.toArray();
                Arrays.sort(albums);
                Album seleccionado = (Album) JOptionPane.showInputDialog(this, "Seleccione el album inicial",
                    "Seleccionar album", JOptionPane.INFORMATION_MESSAGE, null, albums, albums[0]);
                if(seleccionado == null)
                    return;
                boolean empezo = false;
                LinkedList<Cancion> canciones = new LinkedList<Cancion>();
                for(Object a : albums)
                {
                    if(a == seleccionado)
                        empezo = true;
                    if(empezo)
                    {
                        Cancion[] cs = (((Album) a).canciones).toArray(new Cancion[0]);
                        Arrays.sort(cs);
                        canciones.addAll(Arrays.asList(cs));
                    }
                }
                new AgregarEtiquetasG(null, true, canciones).setVisible(true);
            }
        }
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jComboBox4ActionPerformed
        if(padre != null)
        {
            jComboBox1.setModel(new DefaultComboBoxModel(filtrarEtiquetaColeccion(Biodanza.colecciones)));
            jComboBox1ActionPerformed(null);
            chequearPlaying();
        }
    }// GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton4ActionPerformed
        Cancion c = (Cancion) jComboBox3.getSelectedItem();
        if(c == null)
            return;
        String[] etiquetas = c.getEtiquetas();
        int respuesta = JOptionPane.showConfirmDialog(this, "Desea eliminar una etiqueta de la cancion?",
            "Eliminar etiqueta", JOptionPane.YES_NO_OPTION);
        if(respuesta == JOptionPane.YES_OPTION)
        {
            String escogida = etiquetas.length == 0 ? null : (String) JOptionPane.showInputDialog(this,
                "Escoja la etiqueta a eliminar", "Etiqueta", JOptionPane.OK_CANCEL_OPTION, null, etiquetas,
                etiquetas[0]);
            if(escogida != null)
            {
                c.eliminarEtiqueta(escogida);
                Biodanza.recalcularEtiqueta(escogida);
            }
        }
    }// GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jComboBox3ActionPerformed
        chequearPlaying();
    }// GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt)
    {// GEN-FIRST:event_jButton6ActionPerformed
        jComboBox4.setSelectedItem("");
        jComboBox4ActionPerformed(evt);
    }// GEN-LAST:event_jButton6ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;

    // End of variables declaration//GEN-END:variables

    public void setAnswer(int button, Object answer)
    {
        if(button == DialogCaller.OK && answer != null)
        {
            if(answer instanceof Cancion)
            {
                Cancion actual = (Cancion) answer;
                jComboBox4.setSelectedItem("");
                jComboBox1.setSelectedItem(actual.getAlbum().padre);
                jComboBox2.setSelectedItem(actual.getAlbum());
                jComboBox3.setSelectedItem(actual);
                jComboBox1.updateUI();
                jComboBox2.updateUI();
                jComboBox3.updateUI();
            }
            else
            {
                String actual = (String) answer;
                jComboBox4.setSelectedItem(actual);
                jComboBox4ActionPerformed(null);
            }
        }
    }

    private Object[] filtrarEtiquetaCancion(Vector<Cancion> canciones)
    {
        String etiqueta = (String) (jComboBox4 == null ? "" : jComboBox4.getSelectedItem());
        if(etiqueta.trim().isEmpty())
        {
            Object[] respuesta = canciones.toArray();
            Arrays.sort(respuesta);
            return respuesta;
        }
        ArrayList<Cancion> temp = new ArrayList<Cancion>();
        for(Cancion c : canciones)
            if(Arrays.asList(c.getEtiquetas()).contains(etiqueta))
                temp.add(c);
        if(temp.isEmpty())
            return new String[] { "Ninguna" };
        Object[] respuesta = temp.toArray();
        Arrays.sort(respuesta);
        return respuesta;
    }

    private Object[] filtrarEtiquetaAlbum(Vector<Album> albums)
    {
        String etiqueta = (String) (jComboBox4 == null ? "" : jComboBox4.getSelectedItem());
        if(etiqueta.trim().isEmpty())
        {
            Object[] respuesta = albums.toArray();
            Arrays.sort(respuesta);
            return respuesta;
        }
        ArrayList<Album> temp = new ArrayList<Album>();
        for(Album a : albums)
            for(Cancion c : a.canciones)
                if(Arrays.asList(c.getEtiquetas()).contains(etiqueta))
                {
                    temp.add(a);
                    break;
                }
        if(temp.isEmpty())
            return new Album[] { new Album("Ninguno", null) };
        Object[] respuesta = temp.toArray();
        Arrays.sort(respuesta);
        return respuesta;
    }

    private Object[] filtrarEtiquetaColeccion(Vector<Coleccion> colecciones)
    {
        String etiqueta = (String) (jComboBox4 == null ? "" : jComboBox4.getSelectedItem());
        if(etiqueta.trim().isEmpty())
        {
            Object[] respuesta = colecciones.toArray();
            Arrays.sort(respuesta);
            return respuesta;
        }
        ArrayList<Coleccion> temp = new ArrayList<Coleccion>();
        for(Coleccion co : colecciones)
        {
            fore: for(Album a : co.albums)
                for(Cancion c : a.canciones)
                    if(Arrays.asList(c.getEtiquetas()).contains(etiqueta))
                    {
                        temp.add(co);
                        break fore;
                    }
        }
        if(temp.isEmpty())
            return new Coleccion[] { new Coleccion("Ninguno") };
        Object[] respuesta = temp.toArray();
        Arrays.sort(respuesta);
        return respuesta;
    }

    private void chequearPlaying()
    {
        synchronized(this)
        {
            if(playing != null && ((Cancion) jComboBox3.getSelectedItem()) != playing.currentSong())
                jButton1ActionPerformed(null);
        }
    }
}